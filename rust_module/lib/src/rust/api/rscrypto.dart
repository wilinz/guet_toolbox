// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

String getEncryptWebVpnHost(
        {required String plaintext,
        required List<int> key,
        required List<int> iv}) =>
    RustLib.instance.api.crateApiRscryptoGetEncryptWebVpnHost(
        plaintext: plaintext, key: key, iv: iv);

String getDecryptWebVpnHost(
        {required String ciphertext,
        required List<int> key,
        required List<int> iv}) =>
    RustLib.instance.api.crateApiRscryptoGetDecryptWebVpnHost(
        ciphertext: ciphertext, key: key, iv: iv);

String getWebVpnUrl(
        {required String url,
        required List<int> key,
        required List<int> iv,
        required String vpnBaseUrl}) =>
    RustLib.instance.api.crateApiRscryptoGetWebVpnUrl(
        url: url, key: key, iv: iv, vpnBaseUrl: vpnBaseUrl);

String getWebVpnOrdinaryUrl(
        {required String url, required List<int> key, required List<int> iv}) =>
    RustLib.instance.api
        .crateApiRscryptoGetWebVpnOrdinaryUrl(url: url, key: key, iv: iv);

String encryptAes128Cbc64Prefix(
        {required String plain, required List<int> key}) =>
    RustLib.instance.api
        .crateApiRscryptoEncryptAes128Cbc64Prefix(plain: plain, key: key);

String decryptAes128Cbc64Prefix(
        {required String encryptedBase64, required List<int> key}) =>
    RustLib.instance.api.crateApiRscryptoDecryptAes128Cbc64Prefix(
        encryptedBase64: encryptedBase64, key: key);
