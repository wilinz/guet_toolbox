plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

android {
    namespace "com.wilinz.guethub"
    compileSdk = flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.wilinz.guethub"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 21
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        ndk {
            abiFilters 'arm64-v8a'
        }

        // Customize the APK output file name
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def newName = "guethub-android-v${versionName}.apk"
                outputFileName = newName
            }
        }
    }

    signingConfigs {
        release {
            if (localProperties['storeFile'] != null) {
                storeFile file(localProperties['storeFile'])
                storePassword localProperties['storePassword']
                keyAlias localProperties['keyAlias']
                keyPassword localProperties['keyPassword']
            } else {
                // Optional: Handle the case where the properties are not set
                println 'Release build signing not configured. Use debug signing.'
            }
        }
        debug {
            storeFile file('../debug-store-file/debug.keystore')
            storePassword 'android'
        }
    }

    buildTypes {
        debug {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            manifestPlaceholders = [applicationLabel:"GUET校园圈[DEBUG]"]
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            if (localProperties['storeFile'] != null) {
                signingConfig signingConfigs.release
            }
            manifestPlaceholders = [applicationLabel:"GUET校园圈"]
        }
    }
}

flutter {
    source '../..'
}

dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    debugImplementation 'com.guolindev.glance:glance:1.1.0'
//    implementation("com.amap.api:location:6.4.5")
}
